use('cinema')

// Utilizo o operador $all, retorno todos os filmes que contem action e adventure no array category.
// db.movies.find(
//   {
//     category: {
//       $all: ["action", "adventure"]
//     }
//   }
// ).pretty();

// Retorno os filmes que contem action e sci-fi no array category e possuem nota do IMDB maior do que 7.
// db.movies.find(
//   {
//   category: {
//      $all: ["action", "sci-fi"]
//   },
//     imdbRating: { $gt: 7 }
//   }
// ).pretty();

// Retorno todos os filmes com ratings maior do que 103, exibindo apenas os campos title e ratings.
// db.movies.find(
// {
//  ratings: {
//    $elemMatch: { $gt: 103 }
//  }
// },
// {
//  _id: 0,
//  title: 1,
//  ratings: 1
// }
// ).pretty();

// Retorno todos os filmes com ratings entre 100 e 105, exibindo apenas os campos title e ratings.
// db.movies.find(
// {
//  ratings: {
//    $elemMatch: { $gte: 100, $lte: 105 }
//  }
// },
// {
//  _id: 0,
//  title: 1,
//  ratings: 1
// }
// ).pretty();

// Retorno todos os filmes com ratings entre 64 e 105 e divisíveis por 9, exibindo apenas os campos title e ratings.
// db.movies.find(
// {
//  ratings: {
//    $elemMatch: { $gte: 64, $lte: 105, $mod: [9, 0] }
//  }
// },
// {
//  _id: 0,
//  title: 1,
//  ratings: 1
// }
// ).pretty();

// Retorno os filmes da categoria adventure e com ratings maior do que 103, exibindo apenas os campos title, ratings e category.
// db.movies.find(
// {
//  ratings: {
//   $elemMatch: { $gt: 103 }
//  },
//   category: { $all: ["adventure"] }
// },
// {
//  _id: 0,
//  title: 1,
//  ratings: 1,
//  category: 1
// }
// ).pretty();

// Retorno somente o título de todos os filmes com dois elementos no array category.
// db.movies.find(
// { category: { $size: 2 } },
//   { _id: 0, title: 1 }
// ).pretty();

// Retorno somente o título de todos os filmes com quatro elementos no array ratings.
// db.movies.find(
//{ ratings: { $size: 4 } },
// { _id: 0, title: 1 }
// ).pretty();

// Busco os filmes em que o módulo 5 do campo budget é 0 e que o array category tem tamanho 2.
// db.movies.find({
// budget: { $mod: [5, 0] },
// category: { $size: 2 }
// }).pretty();

// Retorno os filmes da categoria "sci-fi" ou que possue o ratings maior do que 199, exibindo apenas os campos title, ratings e category.
// db.movies.find({
// budget: { $mod: [5, 0] },
// category: { $size: 2 }
// }).pretty();

// Retorno os filmes em que o ratings possue tamanho 4 e que seja da category "adventure" ou "family", mas que não tem o imdbRating menor que 7.
// db.movies.find({ $and: [
//   { ratings: { $size: 4 } },
//   { category: { $in: ["adventure", "family"] } },
//   { imdbRating: { $not: { $lt: 7 } }}
// ]});

// Utilizo o operador $regex, retorno todos os filmes em que a descrição comece com a palavra "The".
// db.movies.find(
// {
//  description: {
//    $regex: /^The/
//  }
// }
// ).pretty();

// Utilizo o operador $regex, retorno todos os filmes em que a descrição termine com a palavra "humanity.".
// db.movies.find(
// {
//  description: {
//    $regex: /humanity.$/
//  }
// }
// ).pretty();
